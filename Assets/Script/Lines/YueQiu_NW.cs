using UnityEngine;
using System.Collections;

public class YueQiu_NW : MonoBehaviour {
	public GameObject preb;
	public Transform yueqiu;
	public static GameObject YQ_Index;
	public static float R=20.0f;//控制球体半径
	private float DE=3.141592654f/180;
	private static int year,month,day,hour,min,sec;
	private float[] Angle={130,140,150,160,170,180,190,200,210,220,230,240,250,260,270,280
		,290,300,310,320,330,340,350,360,10,15,20,30,35,40,50,60,65,70,80,90};//月相
	void Start()
	{
		//变量定义
		int i;
		float JDE, T, L1, D, M, M1, F, A1, A2, A3, E, SUML, lamda, SUMB, beta, SUMR, SIN1, SIN2, COS1, Dist;
		//数据
		float[] La = {0,2,2,0,0,0,2,2,2,2,0,1,0,2,0,0,4,0,4,2,2,1,1,2,2,4,2,0,2,2,1
			,2,0,0,2,2,2,4,0,3,2,4,0,2,2,2,4,0,4,1,2,0,1,3,4,2,0,1,2,2};
		float[] Lb = {0,0,0,0,1,0,0,-1,0,-1,1,0,1,0,0,0,0,0,0,1,1,0,1,-1,0,0,0,1,0,
			-1,0,-2,1,2,-2,0,0,-1,0,0,1,-1,2,2,1,-1,0,0,-1,0,1,0,1,0,0,-1,2,1,0,0};
		float[] Lc = {1,-1,0,2,0,0,-2,-1,1,0,-1,0,1,0,1,1,-1,3,-2,-1,0,-1,0,1,2,
			0,-3,-2,-1,-2,1,0,2,0,-1,1,0,-1,2,-1,1,-2,-1,-1,-2,0,1,4,0,-2,0,2,1,-2,-3,2,1,-1,3,-1};
		float[] Ld = {0,0,0,0,0,2,0,0,0,0,0,0,0,-2,2,-2,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,
			0,0,0,0,-2,2,0,2,0,0,0,0,0,0,-2,0,0,0,0,-2,-2,0,0,0,0,0,0,0,-2};
		float[] Sl = {6288774,1274027,658314,213618,-185116,-114332,58793,57066,53322,45758,
			-40923,-34720,-30383,15327,-12528,10980,10675,10034,8548,-7888,-6766,-5163,4987,
			4036,3994,3861,3665,-2689,-2602,2390,-2348,2236,-2120,-2069,2048,-1773,-1595,1215,
			-1110,-892,-810,759,-713,-700,691,596,549,537,520,-487,-399,-381,351,-340,330,327,-323,299,294,0};
		float[] Sr = {-20905355,-3699111,-2955968,-569925,48888,-3149,246158,-152138,
			-170733,-204586,-129620,108743,104755,10321,0,79661,-34782,-23210,-21636,
			24208,30824,-8379,-16675,-12831,-10445,-11650,14403,-7003,0,10056,6322,-9884,
			5751,0,-4950,4130,0,-3958,0,3258,2616,0,-2117,2354,0,0,0,0,0,0,0,-4421,0,0,0,0,1165,0,0,8752};
		float[] Sb = {5128122,280602,277693,173237,55413,46271,32573,17198,9266,8822,8216,4324,
			4200,-3359,2463,2211,2065,-1870,1828,-1794,-1749,-1565,-1491,-1475,-1410,-1344,-1335,
			1107,1021,833,777,671,607,596,491,-451,439,422,421,-366,-351,331,315,302,-283,-229,223,
			223,-220,-220,-185,181,-177,176,166,-164,132,-119,115,107};
		float[] Ba = {0,0,0,2,2,2,2,0,2,0,2,2,2,2,2,2,2,0,4,0,0,0,1,0,0,0,1,0,4,4,0,4,2,2,2,2,0,2,2,
			2,2,4,2,2,0,2,1,1,0,2,1,2,0,4,4,1,4,1,4,2};
		float[] Bb = {0,0,0,0,0,0,0,0,0,0,-1,0,0,1,-1,-1,-1,1,0,1,0,1,0,1,1,1,0,0,0,0,0,0,0,0,-1,0,
			0,0,0,1,1,0,-1,-2,0,1,1,1,1,1,0,-1,1,0,-1,0,0,0,-1,-2};
		float[] Bc = {0,1,1,0,-1,-1,0,2,1,2,0,-2,1,0,-1,0,-1,-1,-1,0,0,-1,0,1,1,0,0,3,0,-1,1,-2,0,2,1,-2,
			3,2,-3,-1,0,0,1,0,1,1,0,0,-2,-1,1,-2,2,-2,-1,1,1,-1,0,0};
		float[] Bd = {1,1,-1,-1,1,-1,1,1,-1,-1,-1,-1,1,-1,1,1,-1,-1,-1,1,3,1,1,1,-1,-1,-1,1,-1,1,-3,1,-3,-1,
			-1,1,-1,1,-1,1,1,1,1,-1,3,-1,-1,1,-1,-1,1,-1,1,-1,-1,-1,-1,-1,-1,1};
		/////////////////////////////////////计算日期和时间////////////////////////////////
		GetNowTime();
		//////////////////////////////////计算时间日期的儒略日历书时//////////////////////
		JDE=jde(year,month,day,hour,min,sec);
		//////////////////////////////////计算自J2000.0开始的儒略世纪数///////////////////
		T=(JDE-2451545)/36525;
		//////////////////////////////////////////////////////////////////////////////////
		L1=218.3164477f+481267.88123421f*T-0.0015786f*T*T+T*T*T/538841-T*T*T*T/65194000;//月亮的平黄经
		D=297.8501921f+445267.1114034f*T-0.0018819f*T*T+T*T*T/545868-T*T*T*T/113065000;//月亮的平均太阳距角
		M=357.5291092f+35999.0502909f*T-0.0001536f*T*T+T*T*T/24490000;//太阳的平近点角
		M1=134.9633964f+477198.8675055f*T+0.0087414f*T*T+T*T*T/69699-T*T*T*T/14712000;//月亮的平近点角
		F=93.2720950f+483202.0175233f*T-0.0036539f*T*T-T*T*T/3526000+T*T*T*T/863310000;//月亮的黄纬参量(由升交点起算的月球平均距离)
		A1=119.75f+131.849f*T;//金星的摄动
		A2=53.09f+479264.290f*T;//木星的摄动
		A3=313.45f+481266.484f*T;
		E=1-0.002516f*T-0.0000074f*T*T;//计算反映地球轨道偏心率变化
		///////////////////////////////////计算月球地心黄经周期项///////////////////////////
		SUML=0;
		for(i=0;i<=59;i++)
		{
			SIN1=La[i]*D+Lb[i]*M+Lc[i]*M1+Ld[i]*F;
			SUML=SUML+Sl[i]*0.000001f*Mathf.Sin(SIN1*DE)*Mathf.Pow(E,Mathf.Abs(Lb[i]));
		};
		///////////////////////////////计算月球地心黄经//////////////////////////////////////
		lamda=L1+SUML+(3958*Mathf.Sin(A1*DE)+1962*Mathf.Sin((L1-F)*DE)+318*Mathf.Sin(A2*DE))/1000000;
		//lamda=fmod(lamda,360);
		lamda = lamda % 360;
		/////////////////////////////计算月球地心黄纬周期项///////////////////////////////////
		SUMB=0;
		for(i=0;i<=59;i++)
		{
			SIN2=Ba[i]*D+Bb[i]*M+Bc[i]*M1+Bd[i]*F;
			SUMB=SUMB+Sb[i]*0.000001f*Mathf.Sin(SIN2*DE)*Mathf.Pow(E,Mathf.Abs(Lb[i]));
		};
		//////////////////////////////////////////计算月球地心黄纬////////////////////////////
		beta=SUMB+(-2235*Mathf.Sin(L1*DE) //(modified)
		           +382*Mathf.Sin(A3*DE)+175*Mathf.Sin((A1-F)*DE)
		           +175*Mathf.Sin((A1+F)*DE)+127*Mathf.Sin((L1-M1)*DE)
		           -115*Mathf.Sin((L1+M1)*DE))/1000000;
		////////////////////////////////////////计算月球地心距离周期项////////////////////////
		SUMR=0;
		for(i=0;i<=59;i++)
		{
			COS1=La[i]*D+Lb[i]*M+Lc[i]*M1+Ld[i]*F;
			SUMR=SUMR+Sr[i]*0.001f*Mathf.Cos(COS1*DE)*Mathf.Pow(E,Mathf.Abs(Lb[i]));
		};
		//////////////////////////////////////计算月球地心距离/////////////////////////////////
		Dist=385000.56f+SUMR;
		//实例化月球
		float x=-(float)(R*Mathf.Cos(beta/180*Mathf.PI)*Mathf.Cos(lamda/180*Mathf.PI));//计算获得XYZ
		float y=(float)(R*Mathf.Cos(beta/180*Mathf.PI)*Mathf.Sin(lamda/180*Mathf.PI));
		float z=(float)(R*Mathf.Sin(beta/180*Mathf.PI));
		Vector3 pos = new Vector3 (x,y,z);
		Constraints.YQ_POS = pos;
		GameObject go = (GameObject)Instantiate(preb,pos,Quaternion.identity);
		go.transform.parent = yueqiu.transform;
		go.transform.eulerAngles = new Vector3 (0,0,Angle[day]);//月球月相有关
		YQ_Index = go;
	}
	void GetNowTime()//获取系统时间
	{
		string NowTime=System.DateTime.Now.ToString("yyyy-MM-dd-HH-mm-ss");
		string[] NowTime_Split = NowTime.Split ('-');
		//年月日时分秒
		year = int.Parse (NowTime_Split[0]);
		month = int.Parse (NowTime_Split[1]);
		day = int.Parse (NowTime_Split[2]);
		hour = int.Parse (NowTime_Split[3]);
		min = int.Parse (NowTime_Split[4]);
		sec = int.Parse (NowTime_Split[5]);
	}
	float jde(int Y,int M,int D,int hour,int min,int sec)//计算儒略日历书时
	{
		int f=0;
		int g=0;
		float mid1,mid2,J,JDE,A;
		if(M>=3)
		{
			f=Y;
			g=M;
		}
		if(M==1||M==2)
		{
			f=Y-1;
			g=M+12;
		};
		mid1=Mathf.Floor(365.25f*f);
		mid2=Mathf.Floor(30.6001f*(g+1));
		A=2-Mathf.Floor(f/100)+Mathf.Floor(f/400);
		J=mid1+mid2+D+A+1720994.5f;
		JDE=J+hour/24+min/1440+sec/86400;
		return JDE;
	}	
}
